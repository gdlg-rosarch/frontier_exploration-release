<?xml version="1.0"?>

<launch>

    <arg name="sensor_range" default="1.0"/>

    <node pkg="frontier_exploration" type="explore_client" respawn="false" name="explore_client" output="screen">
        <param name="proximity" type="double" value="0.2"/>
    </node>

    <node pkg="frontier_exploration" type="explore_server" respawn="false" name="explore_server" output="screen" >

        <!-- frequency of updating frontier goal. 0.0 means only when previous frontier is reached -->
        <param name="frequency" type="double" value="0.5"/>
        <!-- distance before new goal overrides new goal, max is sensor distance -->
        <param name="goal_aliasing" type="double" value="$(arg sensor_range)"/>

        <rosparam ns="explore_costmap" subst_value="true">
            #Sample parameters
            footprint: [[0.1, 0.0], [0.0, 0.1], [0.0, -0.1], [-0.1, 0.0]]
            robot_radius: 0.10
            
            transform_tolerance: 2.0
            update_frequency: 2.0
            publish_frequency: 1.0

            global_frame: map
            robot_base_frame: base_link
            resolution: 0.05

            #Must be rolling and track unknown space to work with BoundedExploreLayer
            rolling_window: false
            track_unknown_space: true

            plugins: 

                #Static map optional, but should be first if present
                - {name: static,                  type: "costmap_2d::StaticLayer"}            
                - {name: explore_boundary,        type: "frontier_exploration::BoundedExploreLayer"}
                #Must have some sort of sensor to clear out obstacles
                - {name: explore_sensor,          type: "costmap_2d::ObstacleLayer"}
                #inflation recommended to fill any gaps
                - {name: inflation,               type: "costmap_2d::InflationLayer"}

            static:
                #Can pull data from gmapping, map_server or a non-rolling costmap, make sure global_frame is the same
                
                map_topic: /map
                #map_topic: move_base/global_costmap/costmap   
                subscribe_to_updates: true

            explore_boundary:
                #if using static map, disable boundary resizing
                resize_to_boundary: false
                #frontier point to travel to, valid - 'closest', 'middle', or 'centroid'
                frontier_travel_point: closest

            explore_sensor:
                #sensor range determines how much map is cleared out during exploration, make sure to enable inf_is_valid if necessary
                observation_sources: laser
                laser: {data_type: LaserScan, clearing: true, marking: true, topic: scan, inf_is_valid: true, raytrace_range: $(arg sensor_range), obstacle_range: $(arg sensor_range)}

            inflation:
                inflation_radius: 0.15
      </rosparam>
    </node>

</launch>